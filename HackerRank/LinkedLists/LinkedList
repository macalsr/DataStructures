	Linked List
	Start with the dead and walk through
	
	
	Disadvantage

	slow to get kth element -> O(n)
	
	Advantage
	insert and delete can be quick.
	depend on the position
	
	
	DOUBLY LINKED LIST


	head -> {}<->{}<->{}<->{}<->{}<->{}<->{}<->{}<->{}
	
	
	Start with the dead 
	
	
	
	public class Node {
	
	Node next;
	int data;
	
	
	public Node(int data){
		this.data = data;
	}
	
	public class LinkedList{
		Node head;
	}
	
	public void append(int data){
		if(head == null){
			head = new Node(data);
			return;
		}
		Node current = head;
			while(current.next != null){
				current = current.next;
				
			}
		current.next = new Node(data);
		}
	}
	
	public void prepend(int data){
		Node newHead = new Node(data);
		newHead.next = head;
		head = newHead;
	}
	
	
	public deleteWithValue(int data){
		if(head == null) return;
		Node current = head;
		if(head.data == data{
			head = head.next;
			return;
		}
		while(current.next != null){
		if(current.next.data == data){
			current.next = current.next.next;
			return;
			}
			current = current.next;
		}
	}
	
	
}

	
	
